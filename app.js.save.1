var express = require('express');
var app = express();
var raspicam = require('raspicam');
var moment = require('moment');

var port = process.env.PORT || 3000;
var busy = false;

app.get('/', function (req, res) {
  res.send('Camera Functions!<br> 1. <a href="./capture">capture</a> <br> 2. <a href="./capturevid">start video</a> <br> 3. <a href="./stopvid">stop video</a>');
});

app.get('/capture', function(req, res) {
  if(!busy) capturePhoto(req, res);
  else res.send("camera still busy"); 
});

app.get('/capturevid', function(req, res) {
  if(!busy) captureVideo(req, res);
  else res.send("camera still busy"); 
});

app.get('/stopvid', function(req, res) {
  if(busy) stopVideo(req,res);
  else res.send("not recording");
});


var vidcam;
function stopVideo(req,res) {
  vidcam.stop();
  busy = false;
  res.send("stopped");
}

function captureVideo(req, res) {
   var current_time = Date.now();
  var current_time_str = moment(current_time).format("MMDDYYYYHHmmss");
var current_time = Date.now();
  var current_time_str = moment(current_time).format("MMDDYYYYHHmmss");

  vidcam = new raspicam({
  	mode: "video",
	output: __dirname + "/camera/VID_" + current_time_str  +".h264",
	nopreview: true,
	timeout: 0
  });
  res.send("recording!");
  busy = true;

  vidcam.start();
  vidcam.on("stop", function(){
	//do stuff
  });
  
  vidcam.on("exit", function(){
	//do stuff
  });
}

function capturePhoto(req, res) {

  var date = new Date();
  var camera = new raspicam({
	mode: "photo",
	output: __dirname + "/camera/IMG_" + date.month + date.date + date.minutes  +".jpg",
	timeout: 1000,
        encoding: "jpg",
	quality: 50,
	nopreview: true
  });
  busy = true;
  camera.start();

  camera.on("exit", function() {
     busy = false;
     res.send("Done!");
  });
}

app.listen(port);
console.log('server listening on port:' + port);

var datetime = new Date().now();
console.log(datetime);

exports = module.exports = app;
